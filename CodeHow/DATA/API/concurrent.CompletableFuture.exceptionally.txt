concurrent.CompletableFuture.exceptionally(Function<Throwable,? extends T>Â fn)\nReturns a new CompletableFuture that is completed when this\n CompletableFuture completes, with the result of the given\n function of the exception triggering this CompletableFuture\'s\n completion when it completes exceptionally; otherwise, if this\n CompletableFuture completes normally, then the returned\n CompletableFuture also completes normally with the same value.\n